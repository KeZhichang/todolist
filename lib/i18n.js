// ËΩªÈáèÁ∫ßÂõΩÈôÖÂåñÁ≥ªÁªü
export const translations = {
  en: {
    // ÈÄöÁî®
    common: {
      cancel: "Cancel",
      save: "Save",
      delete: "Delete",
      edit: "Edit",
      add: "Add",
      create: "Create",
      close: "Close",
      confirm: "Confirm",
      yes: "Yes",
      no: "No",
      ok: "OK",
      loading: "Loading...",
      error: "Error",
      success: "Success",
      warning: "Warning",
      info: "Info",
      locale: "en-US",
      weekdays: {
        sun: "Sun",
        mon: "Mon",
        tue: "Tue",
        wed: "Wed",
        thu: "Thu",
        fri: "Fri",
        sat: "Sat",
      },
    },
    
    // ‰∏ªÈ°µÈù¢
    main: {
      prioSpace: "CorgiTodo",
      focusTrackAchieve: "Focus ‚Ä¢ Track ‚Ä¢ Achieve",
      timer: "Timer",
      habits: "Habits",
      addTask: "Add Task",
      settings: "Settings",
      noTasksYet: "No tasks yet. Add one to get started!",
      keyboardShortcuts: "Keyboard Shortcuts",
      ctrlA: "‚åò/Ctrl + A ‚Üí Add Task",
      ctrlC: "‚åò/Ctrl + C ‚Üí Timer", 
      ctrlH: "‚åò/Ctrl + H ‚Üí Habits",
      ctrlX: "‚åò/Ctrl + X ‚Üí Settings",
      esc: "Esc ‚Üí Close Modal",
    },

    // ÁùÄÈôÜÈ°µ
    landing: {
      description: "A beautiful, modern productivity app that combines powerful task management with a Pomodoro timer, habit tracking, and task collaboration.",
      web: "Web",
      mac: "Mac",
      ios: "iOS",
      windows: "Windows",
      github: "Github",
      openSource: "Open Source & Free",
      openSourceDescription: "CorgiTodo is completely open source. Star the repository, contribute to the project, or fork it to make it your own.",
      starOnGithub: "Star on GitHub",
    },

    // ‰ªªÂä°Áõ∏ÂÖ≥
    tasks: {
      tasks: "Tasks",
      habits: "Habits",
      completed: "completed",
      addSubtask: "Add subtask",
      markComplete: "Mark Complete",
      markIncomplete: "Mark Incomplete",
      deleteTask: "Delete Task",
      deleteSubtask: "Delete Subtask",
      transferToToday: "Transfer to Today",
      subtasks: "Subtasks",
      noSubtasksYet: "No subtasks yet",
      currentCategory: "Current Category",
      changeCategory: "Change Category",
      noCategory: "No category",
      createNewCategory: "Create New Category",
      categoryName: "Category name",
      chooseColor: "Choose Color",
      createCategory: "Create Category",
    },

    // Ê∑ªÂä†‰ªªÂä°
    addTask: {
      createNew: "Create New",
      whatNeedsToBeDone: "What needs to be done?",
      date: "Date",
      today: "Today",
      tomorrow: "Tomorrow", 
      nextWeek: "Next Week",
      category: "Category",
      chooseCategory: "Choose a category (optional)",
      addTask: "Add Task",
    },

    // ËÆæÁΩÆ
    settings: {
      settings: "Settings",
      theme: "Theme",
      chooseYourStyle: "Choose your style",
      darkMode: "Dark Mode",
      lightMode: "Light Mode",
      switchToLight: "Switch to light theme",
      switchToDark: "Switch to dark theme",
      syncTasks: "Sync Tasks (P2P)",
      syncDescription: "Sync your tasks from/with another device",
      exportData: "Export Data",
      backupTasks: "Backup your tasks and habits",
      importData: "Import Data",
      restoreFromBackup: "Restore from backup file",
      buyMeCoffee: "Buy Me a Coffee",
      codedWith: "Coded",
      by: "by",
      version: "V1.3.0",
    },

    // ‰∏ªÈ¢ò
    themes: {
      default: "Default",
      nature: "Nature",
      neoBrutal: "Neo Brutal",
      modern: "Modern",
      pastelDream: "Pastel Dream",
      quantumRose: "Quantum Rose",
      twitter: "Twitter",
      amberMinimal: "Amber Minimal",
      classicWarmTones: "Classic warm tones",
      freshGreenVibes: "Fresh green vibes",
      boldAndStriking: "Bold and striking",
      cleanAndMinimal: "Clean and minimal",
      softLavenderPink: "Soft lavender & pink tones",
      vibrantPinkTeal: "Vibrant pink & teal fusion",
      bluesCleanContrast: "Blues & clean contrast",
      cleanAmberWhite: "Clean amber & white minimalism",
    },

    // Timer related
    timer: {
      breakTime: "Break Time",
      focusTime: "Focus Time",
      focusOnTask: "Focus on task",
      focusingOn: "Focusing on",
      selectTaskHabit: "Select a task or habit",
      youAreDone: "You are done for today!",
      greatJob: "Great job completing all your tasks and habits.",
      markComplete: "Mark Complete",
      overtimeMode: "‚è∞ Overtime Mode",
      breakTime: "üßò Break Time",
      focusTime: "üéØ Focus Time",
      quickPresets: "Quick Presets",
      abandon: "Abandon",
      backToWork: "Back to Work",
      overtime: "Overtime",
    },

    // Habit Tracker related
    habitTracker: {
      habitTracker: "Habit Tracker",
      whatHabitToBuild: "What habit do you want to build?",
      createNewHabit: "Add New Habit",
      allHabitsOverview: "All Habits Overview",
      totalCompletions: "total completions",
      habits: "habits",
      past30Days: "Past 30 days",
      totalHabitCompletions: "total habit completions this month",
      individualHabitCompletion: "Individual habit completion",
      dailyHabitCompletions: "Daily habit completions (1-5+)",
      less: "Less",
      more: "More",
      noHabitsYet: "No habits yet",
      addOneToStart: "Add one to start tracking your progress!",
      deleteHabit: "Delete Habit",
      daysCompleted: "days completed",
      thisMonth: "this month",
    },

    // WebRTC sync related
    webrtc: {
      syncTasks: "Sync Tasks",
      serverUrl: "Server URL",
      enterSignalingServerUrl: "Enter your WebRTC signaling server URL",
      connectionTimeout: "Connection timeout. Server might be unavailable.",
      lostConnection: "Lost connection to signaling server",
      failedToConnect: "Failed to connect to signaling server",
      p2pFailed: "P2P connection failed",
      dataReceived: "Data Received!",
      importThisData: "Import This Data",
      hostRoom: "Host a Room",
      shareTasks: "Share your tasks with others",
      shareRoomId: "Share this Room ID with others",
      connectedUsers: "Connected Users",
      waitingForUsers: "Waiting for users to join...",
      joinRoom: "Join Room",
      enterRoomId: "Enter Room ID",
      connectionError: "Connection Error",
      user: "User",
      or: "OR",
      copied: "Copied!",
      copy: "Copy",
      close: "Close",
      startOver: "Start Over",
      tasks: "Tasks",
      customTags: "Custom Tags",
      habits: "Habits",
      theme: "Theme",
    },

    // ÁùÄÈôÜÈ°µ
    landing: {
      description: "A beautiful, modern productivity app that combines powerful task management with a Pomodoro timer, habit tracking, and task collaboration.",
      web: "Web",
      mac: "Mac",
      ios: "iOS",
      windows: "Windows",
      github: "Github",
      openSource: "Open Source & Free",
      openSourceDescription: "CorgiTodo is completely open source. Star the repository, contribute to the project, or fork it to make it your own.",
      starOnGithub: "Star on GitHub",
    },

    // ËÆ°Êó∂Âô®
    timer: {
      focusTimer: "Focus Timer",
      focusTime: "Focus Time",
      breakTime: "Break Time",
      focusOnTask: "Focus on task",
      focusingOn: "Focusing on",
      selectTask: "Select a task or habit",
      selectTaskHabit: "Select a task or habit",
      youAreDone: "You are done for today!",
      greatJob: "Great job completing all your tasks and habits.",
      quickPresets: "Quick Presets",
      markComplete: "Mark Complete",
      overtime: "Overtime",
      breakTimeMode: "üßò Break Time",
      focusTimeMode: "üéØ Focus Time",
      overtimeMode: "‚è∞ Overtime Mode",
    },

    // ‰π†ÊÉØËøΩË∏™
    habits: {
      habitTracker: "Habit Tracker",
      whatHabitToBuild: "What habit do you want to build?",
      addNewHabit: "Add New Habit",
      createNewHabit: "Add New Habit",
      addHabit: "Add Habit",
      allHabitsOverview: "All Habits Overview",
      totalCompletions: "total completions",
      habits: "habits",
      past30Days: "Past 30 days",
      totalHabitCompletions: "total habit completions this month",
      daysCompleted: "days completed this month",
      less: "Less",
      more: "More",
      dailyHabitCompletions: "Daily habit completions (1-5+)",
      individualHabitCompletion: "Individual habit completion",
      noHabitsYet: "No habits yet",
      addOneToStart: "Add one to start tracking your progress!",
      thisMonth: "this month",
    },

    // ‰ªªÂä°ÈÄâÈ°π
    taskOptions: {
      options: "Options",
      subtask: "Subtask",
      markComplete: "Mark Complete",
      markIncomplete: "Mark Incomplete",
      transferToToday: "Transfer to Today",
      deleteTask: "Delete Task",
      deleteSubtask: "Delete Subtask",
    },

    // Ê∑ªÂä†Â≠ê‰ªªÂä°
    addSubtask: {
      createSubtask: "Create Subtask",
      for: "for",
      whatNeedsToBeDone: "What needs to be done?",
      category: "Category",
      chooseCategory: "Choose a category (optional)",
      addSubtask: "Add Subtask",
    },

    // ‰ªãÁªçÈ°µÈù¢
    intro: {
      focusOnWhatMatters: "Focus on what matters.",
      everyDayNewBeginning: "Every day is a new beginning.",
      smallStepsBigResults: "Small steps, big results.",
      yourTimeMostValuable: "Your time is your most valuable asset.",
      achieveGoalsOneTask: "Achieve your goals, one task at a time.",
      makeTodayCount: "Make today count.",
      progressNotPerfection: "Progress, not perfection.",
      startWhereYouAre: "Start where you are. Use what you have. Do what you can.",
      bestWayPredictFuture: "The best way to predict the future is to create it.",
      disciplineChoosing: "Discipline is choosing between what you want now and what you want most.",
      journeyThousandMiles: "The journey of a thousand miles begins with a single step.",
      believeYouCan: "Believe you can and you're halfway there.",
      futureBelongsToThose: "The future belongs to those who believe in the beauty of their dreams.",
      successNotFinal: "Success is not final, failure is not fatal: it is the courage to continue that counts.",
      onlyWayGreatWork: "The only way to do great work is to love what you do.",
      wakeUp: "Wake UP!",
      makeItCount: "Make it COUNT!",
      youHaveNoTime: "You have no time to waste.",
    },

    // WebRTC ÂêåÊ≠•
    sync: {
      syncTasks: "Sync Tasks",
      serverUrl: "Server URL",
      enterServerUrl: "Enter your WebRTC signaling server URL",
      hostingRoom: "Hosting Room",
      connecting: "Connecting...",
      connected: "Connected!",
      todoShared: "Todo Shared!",
      connectionError: "Connection Error",
      hostRoom: "Host a Room",
      shareTasksWithOthers: "Share your tasks with others",
      or: "OR",
      joinRoom: "Join Room",
      enterRoomId: "Enter Room ID",
      shareThisRoomId: "Share this Room ID with others",
      connectedUsers: "Connected Users",
      user: "User",
      send: "Send",
      waitingForUsers: "Waiting for users to join...",
      dataReceived: "Data Received!",
      importThisData: "Import This Data",
      startOver: "Start Over",
      copied: "Copied!",
      copy: "Copy",
    },

    // ÂØºÂÖ•ÂØºÂá∫
    importExport: {
      dataImportedSuccessfully: "Data imported successfully!",
      errorImportingData: "Error importing data. Please check the file format.",
      syncCompleted: "Sync completed! No new items were found - all data was already in sync.",
      syncSuccessful: "Sync successful! Merged/Updated:",
      newTasks: "new task(s)",
      updatedTasks: "updated task(s)", 
      newSubtasks: "new subtask(s)",
      newTags: "new tag(s)",
      newHabits: "new habit(s)",
      updatedSettings: "updated",
      doYouWantToUpdate: "Do you want to update your",
      settingsToMatch: "settings to match the imported data?",
      errorProcessingSynced: "Error processing synced data. Please try again.",
    },

    // Êó∂Èó¥Áõ∏ÂÖ≥
    time: {
      minutes: "min",
      hours: "h",
      seconds: "s",
      overtime: "Overtime",
    },
  },

  zh: {
    // ÈÄöÁî®
    common: {
      cancel: "ÂèñÊ∂à",
      save: "‰øùÂ≠ò",
      delete: "Âà†Èô§",
      edit: "ÁºñËæë",
      add: "Ê∑ªÂä†",
      create: "ÂàõÂª∫",
      close: "ÂÖ≥Èó≠",
      confirm: "Á°ÆËÆ§",
      yes: "ÊòØ",
      no: "Âê¶",
      ok: "Á°ÆÂÆö",
      loading: "Âä†ËΩΩ‰∏≠...",
      error: "ÈîôËØØ",
      success: "ÊàêÂäü",
      warning: "Ë≠¶Âëä",
      info: "‰ø°ÊÅØ",
      locale: "zh-CN",
      weekdays: {
        sun: "Êó•",
        mon: "‰∏Ä",
        tue: "‰∫å",
        wed: "‰∏â",
        thu: "Âõõ",
        fri: "‰∫î",
        sat: "ÂÖ≠",
      },
    },
    
    // ‰∏ªÈ°µÈù¢
    main: {
      prioSpace: "ÊüØÂü∫ÂæÖÂäû",
      focusTrackAchieve: "‰∏ìÊ≥® ‚Ä¢ ËøΩË∏™ ‚Ä¢ ÊàêÂ∞±",
      timer: "ËÆ°Êó∂Âô®",
      habits: "‰π†ÊÉØ",
      addTask: "Ê∑ªÂä†‰ªªÂä°",
      settings: "ËÆæÁΩÆ",
      noTasksYet: "ËøòÊ≤°Êúâ‰ªªÂä°„ÄÇÊ∑ªÂä†‰∏Ä‰∏™ÂºÄÂßãÂêßÔºÅ",
      keyboardShortcuts: "ÈîÆÁõòÂø´Êç∑ÈîÆ",
      ctrlA: "‚åò/Ctrl + A ‚Üí Ê∑ªÂä†‰ªªÂä°",
      ctrlC: "‚åò/Ctrl + C ‚Üí ËÆ°Êó∂Âô®", 
      ctrlH: "‚åò/Ctrl + H ‚Üí ‰π†ÊÉØ",
      ctrlX: "‚åò/Ctrl + X ‚Üí ËÆæÁΩÆ",
      esc: "Esc ‚Üí ÂÖ≥Èó≠ÂºπÁ™ó",
    },

    // ÁùÄÈôÜÈ°µ
    landing: {
      description: "‰∏Ä‰∏™ÁæéËßÇÁé∞‰ª£ÁöÑÁîü‰∫ßÂäõÂ∫îÁî®ÔºåÁªìÂêà‰∫ÜÂº∫Â§ßÁöÑ‰ªªÂä°ÁÆ°ÁêÜ„ÄÅÁï™ËåÑÈíüËÆ°Êó∂Âô®„ÄÅ‰π†ÊÉØËøΩË∏™Âíå‰ªªÂä°Âçè‰ΩúÂäüËÉΩ„ÄÇ",
      web: "ÁΩëÈ°µÁâà",
      mac: "Mac",
      ios: "iOS",
      windows: "Windows",
      github: "Github",
      openSource: "ÂºÄÊ∫êÂÖçË¥π",
      openSourceDescription: "CorgiTodo ÂÆåÂÖ®ÂºÄÊ∫ê„ÄÇÁªô‰ªìÂ∫ìÁÇπÊòü„ÄÅË¥°ÁåÆ‰ª£Á†ÅÔºåÊàñËÄÖ fork Êù•Âà∂‰Ωú‰Ω†Ëá™Â∑±ÁöÑÁâàÊú¨„ÄÇ",
      starOnGithub: "Âú® GitHub ‰∏äÁÇπÊòü",
    },

    // ‰ªªÂä°Áõ∏ÂÖ≥
    tasks: {
      tasks: "‰ªªÂä°",
      habits: "‰π†ÊÉØ",
      completed: "Â∑≤ÂÆåÊàê",
      addSubtask: "Ê∑ªÂä†Â≠ê‰ªªÂä°",
      markComplete: "Ê†áËÆ∞ÂÆåÊàê",
      markIncomplete: "Ê†áËÆ∞Êú™ÂÆåÊàê",
      deleteTask: "Âà†Èô§‰ªªÂä°",
      deleteSubtask: "Âà†Èô§Â≠ê‰ªªÂä°",
      transferToToday: "ËΩ¨ÁßªÂà∞‰ªäÂ§©",
      subtasks: "Â≠ê‰ªªÂä°",
      noSubtasksYet: "ËøòÊ≤°ÊúâÂ≠ê‰ªªÂä°",
      currentCategory: "ÂΩìÂâçÂàÜÁ±ª",
      changeCategory: "Êõ¥ÊîπÂàÜÁ±ª",
      noCategory: "Êó†ÂàÜÁ±ª",
      createNewCategory: "ÂàõÂª∫Êñ∞ÂàÜÁ±ª",
      categoryName: "ÂàÜÁ±ªÂêçÁß∞",
      chooseColor: "ÈÄâÊã©È¢úËâ≤",
      createCategory: "ÂàõÂª∫ÂàÜÁ±ª",
    },

    // Ê∑ªÂä†‰ªªÂä°
    addTask: {
      createNew: "ÂàõÂª∫Êñ∞‰ªªÂä°",
      whatNeedsToBeDone: "ÈúÄË¶ÅÂÅö‰ªÄ‰πàÔºü",
      date: "Êó•Êúü",
      today: "‰ªäÂ§©",
      tomorrow: "ÊòéÂ§©", 
      nextWeek: "‰∏ãÂë®",
      category: "ÂàÜÁ±ª",
      chooseCategory: "ÈÄâÊã©‰∏Ä‰∏™ÂàÜÁ±ªÔºàÂèØÈÄâÔºâ",
      addTask: "Ê∑ªÂä†‰ªªÂä°",
    },

    // ËÆæÁΩÆ
    settings: {
      settings: "ËÆæÁΩÆ",
      theme: "‰∏ªÈ¢ò",
      chooseYourStyle: "ÈÄâÊã©‰Ω†ÁöÑÈ£éÊ†º",
      darkMode: "Ê∑±Ëâ≤Ê®°Âºè",
      lightMode: "ÊµÖËâ≤Ê®°Âºè",
      switchToLight: "ÂàáÊç¢Âà∞ÊµÖËâ≤‰∏ªÈ¢ò",
      switchToDark: "ÂàáÊç¢Âà∞Ê∑±Ëâ≤‰∏ªÈ¢ò",
      syncTasks: "ÂêåÊ≠•‰ªªÂä° (P2P)",
      syncDescription: "‰∏éÂÖ∂‰ªñËÆæÂ§áÂêåÊ≠•‰Ω†ÁöÑ‰ªªÂä°",
      exportData: "ÂØºÂá∫Êï∞ÊçÆ",
      backupTasks: "Â§á‰ªΩ‰Ω†ÁöÑ‰ªªÂä°Âíå‰π†ÊÉØ",
      importData: "ÂØºÂÖ•Êï∞ÊçÆ",
      restoreFromBackup: "‰ªéÂ§á‰ªΩÊñá‰ª∂ÊÅ¢Â§ç",
      buyMeCoffee: "ËØ∑ÊàëÂñùÂíñÂï°",
      codedWith: "Áî®",
      by: "Âà∂‰Ωú",
      version: "V1.3.0",
    },

    // ‰∏ªÈ¢ò
    themes: {
      default: "ÈªòËÆ§",
      nature: "Ëá™ÁÑ∂",
      neoBrutal: "Êñ∞ÈáéÂÖΩÊ¥æ",
      modern: "Áé∞‰ª£",
      pastelDream: "Á≤âÂΩ©Ê¢¶Â¢É",
      quantumRose: "ÈáèÂ≠êÁé´Áë∞",
      twitter: "Êé®Áâπ",
      amberMinimal: "Áê•ÁèÄÊûÅÁÆÄ",
      classicWarmTones: "ÁªèÂÖ∏ÊöñËâ≤Ë∞É",
      freshGreenVibes: "Ê∏ÖÊñ∞ÁªøËâ≤Ê∞õÂõ¥",
      boldAndStriking: "Â§ßËÉÜÈÜíÁõÆ",
      cleanAndMinimal: "ÁÆÄÊ¥ÅÊûÅÁÆÄ",
      softLavenderPink: "ÊüîÂíåËñ∞Ë°£ËçâÁ≤âËâ≤Ë∞É",
      vibrantPinkTeal: "Ê¥ªÂäõÁ≤âÈùíËûçÂêà",
      bluesCleanContrast: "ËìùËâ≤Ê∏ÖÊ¥ÅÂØπÊØî",
      cleanAmberWhite: "ÁÆÄÊ¥ÅÁê•ÁèÄÁôΩÊûÅÁÆÄ",
    },

    // ËÆ°Êó∂Âô®Áõ∏ÂÖ≥
    timer: {
      breakTime: "‰ºëÊÅØÊó∂Èó¥",
      focusTime: "‰∏ìÊ≥®Êó∂Èó¥",
      focusOnTask: "‰∏ìÊ≥®‰ªªÂä°",
      focusingOn: "Ê≠£Âú®‰∏ìÊ≥®",
      selectTaskHabit: "ÈÄâÊã©‰∏Ä‰∏™‰ªªÂä°Êàñ‰π†ÊÉØ",
      youAreDone: "‰Ω†‰ªäÂ§©ÂÆåÊàê‰∫ÜÔºÅ",
      greatJob: "ÊÅ≠Âñú‰Ω†ÂÆåÊàê‰∫ÜÊâÄÊúâ‰ªªÂä°Âíå‰π†ÊÉØ„ÄÇ",
      markComplete: "Ê†áËÆ∞ÂÆåÊàê",
      overtimeMode: "‚è∞ Âä†Áè≠Ê®°Âºè",
      breakTime: "üßò ‰ºëÊÅØÊó∂Èó¥",
      focusTime: "üéØ ‰∏ìÊ≥®Êó∂Èó¥",
      quickPresets: "Âø´ÈÄüÈ¢ÑËÆæ",
      abandon: "ÊîæÂºÉ",
      backToWork: "ËøîÂõûÂ∑•‰Ωú",
      overtime: "Âä†Áè≠",
    },

    // ‰π†ÊÉØËøΩË∏™Âô®Áõ∏ÂÖ≥
    habitTracker: {
      habitTracker: "‰π†ÊÉØËøΩË∏™Âô®",
      whatHabitToBuild: "‰Ω†ÊÉ≥ÂÖªÊàê‰ªÄ‰πà‰π†ÊÉØÔºü",
      createNewHabit: "Ê∑ªÂä†Êñ∞‰π†ÊÉØ",
      allHabitsOverview: "ÊâÄÊúâ‰π†ÊÉØÊ¶ÇËßà",
      totalCompletions: "ÊÄªÂÆåÊàêÊï∞",
      habits: "‰π†ÊÉØ",
      past30Days: "ËøáÂéª30Â§©",
      totalHabitCompletions: "Êú¨ÊúàÊÄª‰π†ÊÉØÂÆåÊàêÊï∞",
      individualHabitCompletion: "Âçï‰∏™‰π†ÊÉØÂÆåÊàêÊÉÖÂÜµ",
      dailyHabitCompletions: "ÊØèÊó•‰π†ÊÉØÂÆåÊàêÊï∞ (1-5+)",
      less: "Êõ¥Â∞ë",
      more: "Êõ¥Â§ö",
      noHabitsYet: "ÊöÇÊó†‰π†ÊÉØ",
      addOneToStart: "Ê∑ªÂä†‰∏Ä‰∏™Êù•ÂºÄÂßãËøΩË∏™‰Ω†ÁöÑËøõÂ∫¶ÔºÅ",
      deleteHabit: "Âà†Èô§‰π†ÊÉØ",
      daysCompleted: "Â§©ÂÆåÊàê",
      thisMonth: "Êú¨Êúà",
    },

    // WebRTCÂêåÊ≠•Áõ∏ÂÖ≥
    webrtc: {
      syncTasks: "ÂêåÊ≠•‰ªªÂä°",
      serverUrl: "ÊúçÂä°Âô®URL",
      enterSignalingServerUrl: "ËæìÂÖ•‰Ω†ÁöÑWebRTC‰ø°‰ª§ÊúçÂä°Âô®URL",
      connectionTimeout: "ËøûÊé•Ë∂ÖÊó∂„ÄÇÊúçÂä°Âô®ÂèØËÉΩ‰∏çÂèØÁî®„ÄÇ",
      lostConnection: "‰∏é‰ø°‰ª§ÊúçÂä°Âô®ÁöÑËøûÊé•‰∏¢Â§±",
      failedToConnect: "Êó†Ê≥ïËøûÊé•Âà∞‰ø°‰ª§ÊúçÂä°Âô®",
      p2pFailed: "P2PËøûÊé•Â§±Ë¥•",
      dataReceived: "Êï∞ÊçÆÂ∑≤Êé•Êî∂!",
      importThisData: "ÂØºÂÖ•Ê≠§Êï∞ÊçÆ",
      hostRoom: "ÂàõÂª∫ÊàøÈó¥",
      shareTasks: "‰∏é‰ªñ‰∫∫ÂàÜ‰∫´‰Ω†ÁöÑ‰ªªÂä°",
      shareRoomId: "‰∏é‰ªñ‰∫∫ÂàÜ‰∫´Ê≠§ÊàøÈó¥ID",
      connectedUsers: "Â∑≤ËøûÊé•Áî®Êà∑",
      waitingForUsers: "Á≠âÂæÖÁî®Êà∑Âä†ÂÖ•...",
      joinRoom: "Âä†ÂÖ•ÊàøÈó¥",
      enterRoomId: "ËæìÂÖ•ÊàøÈó¥ID",
      connectionError: "ËøûÊé•ÈîôËØØ",
      user: "Áî®Êà∑",
      or: "Êàñ",
      copied: "Â∑≤Â§çÂà∂!",
      copy: "Â§çÂà∂",
      close: "ÂÖ≥Èó≠",
      startOver: "ÈáçÊñ∞ÂºÄÂßã",
      tasks: "‰ªªÂä°",
      customTags: "Ëá™ÂÆö‰πâÊ†áÁ≠æ",
      habits: "‰π†ÊÉØ",
      theme: "‰∏ªÈ¢ò",
    },

    // ÁùÄÈôÜÈ°µ
    landing: {
      description: "‰∏Ä‰∏™ÁæéËßÇ„ÄÅÁé∞‰ª£ÁöÑÁîü‰∫ßÂäõÂ∫îÁî®ÔºåÁªìÂêà‰∫ÜÂº∫Â§ßÁöÑ‰ªªÂä°ÁÆ°ÁêÜ„ÄÅÁï™ËåÑÈíüËÆ°Êó∂Âô®„ÄÅ‰π†ÊÉØËøΩË∏™Âíå‰ªªÂä°Âçè‰ΩúÂäüËÉΩ„ÄÇ",
      web: "ÁΩëÈ°µÁâà",
      mac: "Mac",
      ios: "iOS",
      windows: "Windows",
      github: "Github",
      openSource: "ÂºÄÊ∫êÂÖçË¥π",
      openSourceDescription: "CorgiTodo ÂÆåÂÖ®ÂºÄÊ∫ê„ÄÇÁªô‰ªìÂ∫ìÁÇπÊòü„ÄÅ‰∏∫È°πÁõÆË¥°ÁåÆ‰ª£Á†ÅÔºåÊàñËÄÖÂàÜÂèâÂÆÉÊù•Âà∂‰Ωú‰Ω†Ëá™Â∑±ÁöÑÁâàÊú¨„ÄÇ",
      starOnGithub: "Âú® GitHub ‰∏äÁÇπÊòü",
    },

    // ËÆ°Êó∂Âô®
    timer: {
      focusTimer: "‰∏ìÊ≥®ËÆ°Êó∂Âô®",
      focusTime: "‰∏ìÊ≥®Êó∂Èó¥",
      breakTime: "‰ºëÊÅØÊó∂Èó¥",
      focusOnTask: "‰∏ìÊ≥®‰ªªÂä°",
      focusingOn: "Ê≠£Âú®‰∏ìÊ≥®",
      selectTask: "ÈÄâÊã©‰∏Ä‰∏™‰ªªÂä°Êàñ‰π†ÊÉØ",
      selectTaskHabit: "ÈÄâÊã©‰∏Ä‰∏™‰ªªÂä°Êàñ‰π†ÊÉØ",
      youAreDone: "‰Ω†‰ªäÂ§©ÂÆåÊàê‰∫ÜÔºÅ",
      greatJob: "Â§™Ê£í‰∫ÜÔºåÂÆåÊàê‰∫ÜÊâÄÊúâ‰ªªÂä°Âíå‰π†ÊÉØ„ÄÇ",
      quickPresets: "Âø´ÈÄüÈ¢ÑËÆæ",
      markComplete: "Ê†áËÆ∞ÂÆåÊàê",
      overtime: "Ë∂ÖÊó∂",
      breakTimeMode: "üßò ‰ºëÊÅØÊó∂Èó¥",
      focusTimeMode: "üéØ ‰∏ìÊ≥®Êó∂Èó¥",
      overtimeMode: "‚è∞ Ë∂ÖÊó∂Ê®°Âºè",
    },

    // ‰π†ÊÉØËøΩË∏™
    habits: {
      habitTracker: "‰π†ÊÉØËøΩË∏™Âô®",
      whatHabitToBuild: "‰Ω†ÊÉ≥Âª∫Á´ã‰ªÄ‰πà‰π†ÊÉØÔºü",
      addNewHabit: "Ê∑ªÂä†Êñ∞‰π†ÊÉØ",
      createNewHabit: "Ê∑ªÂä†Êñ∞‰π†ÊÉØ",
      addHabit: "Ê∑ªÂä†‰π†ÊÉØ",
      allHabitsOverview: "ÊâÄÊúâ‰π†ÊÉØÊ¶ÇËßà",
      totalCompletions: "ÊÄªÂÆåÊàêÊ¨°Êï∞",
      habits: "‰∏™‰π†ÊÉØ",
      past30Days: "ËøáÂéª30Â§©",
      totalHabitCompletions: "Êú¨ÊúàÊÄª‰π†ÊÉØÂÆåÊàêÊ¨°Êï∞",
      daysCompleted: "Êú¨ÊúàÂÆåÊàêÂ§©Êï∞",
      less: "Â∞ë",
      more: "Â§ö",
      dailyHabitCompletions: "ÊØèÊó•‰π†ÊÉØÂÆåÊàêÊ¨°Êï∞ (1-5+)",
      individualHabitCompletion: "‰∏™‰∫∫‰π†ÊÉØÂÆåÊàêÊÉÖÂÜµ",
      noHabitsYet: "ËøòÊ≤°Êúâ‰π†ÊÉØ",
      addOneToStart: "Ê∑ªÂä†‰∏Ä‰∏™ÂºÄÂßãËøΩË∏™‰Ω†ÁöÑËøõÊ≠•ÔºÅ",
      thisMonth: "Êú¨Êúà",
    },

    // ‰ªªÂä°ÈÄâÈ°π
    taskOptions: {
      options: "ÈÄâÈ°π",
      subtask: "Â≠ê‰ªªÂä°",
      markComplete: "Ê†áËÆ∞ÂÆåÊàê",
      markIncomplete: "Ê†áËÆ∞Êú™ÂÆåÊàê",
      transferToToday: "ËΩ¨ÁßªÂà∞‰ªäÂ§©",
      deleteTask: "Âà†Èô§‰ªªÂä°",
      deleteSubtask: "Âà†Èô§Â≠ê‰ªªÂä°",
    },

    // Ê∑ªÂä†Â≠ê‰ªªÂä°
    addSubtask: {
      createSubtask: "ÂàõÂª∫Â≠ê‰ªªÂä°",
      for: "‰∏∫",
      whatNeedsToBeDone: "ÈúÄË¶ÅÂÅö‰ªÄ‰πàÔºü",
      category: "ÂàÜÁ±ª",
      chooseCategory: "ÈÄâÊã©‰∏Ä‰∏™ÂàÜÁ±ªÔºàÂèØÈÄâÔºâ",
      addSubtask: "Ê∑ªÂä†Â≠ê‰ªªÂä°",
    },

    // ‰ªãÁªçÈ°µÈù¢
    intro: {
      focusOnWhatMatters: "‰∏ìÊ≥®‰∫éÈáçË¶ÅÁöÑ‰∫ãÊÉÖ„ÄÇ",
      everyDayNewBeginning: "ÊØè‰∏ÄÂ§©ÈÉΩÊòØÊñ∞ÁöÑÂºÄÂßã„ÄÇ",
      smallStepsBigResults: "Â∞èÊ≠•È™§ÔºåÂ§ßÊàêÊûú„ÄÇ",
      yourTimeMostValuable: "‰Ω†ÁöÑÊó∂Èó¥ÊòØ‰Ω†ÊúÄÂÆùË¥µÁöÑËµÑ‰∫ß„ÄÇ",
      achieveGoalsOneTask: "‰∏ÄÊ¨°‰∏Ä‰∏™‰ªªÂä°Âú∞ÂÆûÁé∞‰Ω†ÁöÑÁõÆÊ†á„ÄÇ",
      makeTodayCount: "ËÆ©‰ªäÂ§©ÊúâÊÑè‰πâ„ÄÇ",
      progressNotPerfection: "ËøõÊ≠•ÔºåËÄå‰∏çÊòØÂÆåÁæé„ÄÇ",
      startWhereYouAre: "‰ªé‰Ω†ÊâÄÂú®ÁöÑÂú∞ÊñπÂºÄÂßã„ÄÇÁî®‰Ω†ÊâÄÊã•ÊúâÁöÑ„ÄÇÂÅö‰Ω†ËÉΩÂÅöÁöÑ„ÄÇ",
      bestWayPredictFuture: "È¢ÑÊµãÊú™Êù•ÁöÑÊúÄÂ•ΩÊñπÊ≥ïÂ∞±ÊòØÂàõÈÄ†ÂÆÉ„ÄÇ",
      disciplineChoosing: "Ëá™ÂæãÂ∞±ÊòØÂú®Áé∞Âú®ÊÉ≥Ë¶ÅÁöÑÂíå‰Ω†ÊúÄÊÉ≥Ë¶ÅÁöÑ‰πãÈó¥ÂÅöÈÄâÊã©„ÄÇ",
      journeyThousandMiles: "ÂçÉÈáå‰πãË°åÔºåÂßã‰∫éË∂≥‰∏ã„ÄÇ",
      believeYouCan: "Áõ∏‰ø°‰Ω†ËÉΩÔºå‰Ω†Â∞±Â∑≤ÁªèÊàêÂäü‰∫Ü‰∏ÄÂçä„ÄÇ",
      futureBelongsToThose: "Êú™Êù•Â±û‰∫éÈÇ£‰∫õÁõ∏‰ø°Ê¢¶ÊÉ≥‰πãÁæéÁöÑ‰∫∫„ÄÇ",
      successNotFinal: "ÊàêÂäü‰∏çÊòØÁªàÁÇπÔºåÂ§±Ë¥•‰∏çÊòØËá¥ÂëΩÁöÑÔºöÈáçË¶ÅÁöÑÊòØÁªßÁª≠ÂâçËøõÁöÑÂãáÊ∞î„ÄÇ",
      onlyWayGreatWork: "ÂÅö‰ºüÂ§ßÂ∑•‰ΩúÁöÑÂîØ‰∏ÄÊñπÊ≥ïÂ∞±ÊòØÁÉ≠Áà±‰Ω†ÊâÄÂÅöÁöÑ‰∫ãÊÉÖ„ÄÇ",
      wakeUp: "ÈÜíÈÜíÔºÅ",
      makeItCount: "ËÆ©ÂÆÉÊúâÊÑè‰πâÔºÅ",
      youHaveNoTime: "‰Ω†Ê≤°ÊúâÊó∂Èó¥Êµ™Ë¥π„ÄÇ",
    },

    // WebRTC ÂêåÊ≠•
    sync: {
      syncTasks: "ÂêåÊ≠•‰ªªÂä°",
      serverUrl: "ÊúçÂä°Âô®Âú∞ÂùÄ",
      enterServerUrl: "ËæìÂÖ•‰Ω†ÁöÑ WebRTC ‰ø°‰ª§ÊúçÂä°Âô®Âú∞ÂùÄ",
      hostingRoom: "Ê≠£Âú®ÊâòÁÆ°ÊàøÈó¥",
      connecting: "ËøûÊé•‰∏≠...",
      connected: "Â∑≤ËøûÊé•ÔºÅ",
      todoShared: "ÂæÖÂäû‰∫ãÈ°πÂ∑≤ÂàÜ‰∫´ÔºÅ",
      connectionError: "ËøûÊé•ÈîôËØØ",
      hostRoom: "ÊâòÁÆ°ÊàøÈó¥",
      shareTasksWithOthers: "‰∏é‰ªñ‰∫∫ÂàÜ‰∫´‰Ω†ÁöÑ‰ªªÂä°",
      or: "ÊàñËÄÖ",
      joinRoom: "Âä†ÂÖ•ÊàøÈó¥",
      enterRoomId: "ËæìÂÖ•ÊàøÈó¥ID",
      shareThisRoomId: "‰∏é‰ªñ‰∫∫ÂàÜ‰∫´Ëøô‰∏™ÊàøÈó¥ID",
      connectedUsers: "Â∑≤ËøûÊé•Áî®Êà∑",
      user: "Áî®Êà∑",
      send: "ÂèëÈÄÅ",
      waitingForUsers: "Á≠âÂæÖÁî®Êà∑Âä†ÂÖ•...",
      dataReceived: "Êï∞ÊçÆÂ∑≤Êé•Êî∂ÔºÅ",
      importThisData: "ÂØºÂÖ•Ê≠§Êï∞ÊçÆ",
      startOver: "ÈáçÊñ∞ÂºÄÂßã",
      copied: "Â∑≤Â§çÂà∂ÔºÅ",
      copy: "Â§çÂà∂",
    },

    // ÂØºÂÖ•ÂØºÂá∫
    importExport: {
      dataImportedSuccessfully: "Êï∞ÊçÆÂØºÂÖ•ÊàêÂäüÔºÅ",
      errorImportingData: "ÂØºÂÖ•Êï∞ÊçÆÊó∂Âá∫Èîô„ÄÇËØ∑Ê£ÄÊü•Êñá‰ª∂Ê†ºÂºè„ÄÇ",
      syncCompleted: "ÂêåÊ≠•ÂÆåÊàêÔºÅÊ≤°ÊúâÊâæÂà∞Êñ∞È°πÁõÆ - ÊâÄÊúâÊï∞ÊçÆÂ∑≤ÁªèÂêåÊ≠•„ÄÇ",
      syncSuccessful: "ÂêåÊ≠•ÊàêÂäüÔºÅÂêàÂπ∂/Êõ¥Êñ∞Ôºö",
      newTasks: "‰∏™Êñ∞‰ªªÂä°",
      updatedTasks: "‰∏™Â∑≤Êõ¥Êñ∞‰ªªÂä°", 
      newSubtasks: "‰∏™Êñ∞Â≠ê‰ªªÂä°",
      newTags: "‰∏™Êñ∞Ê†áÁ≠æ",
      newHabits: "‰∏™Êñ∞‰π†ÊÉØ",
      updatedSettings: "Â∑≤Êõ¥Êñ∞",
      doYouWantToUpdate: "‰Ω†ÊÉ≥Êõ¥Êñ∞‰Ω†ÁöÑ",
      settingsToMatch: "ËÆæÁΩÆ‰ª•ÂåπÈÖçÂØºÂÖ•ÁöÑÊï∞ÊçÆÂêóÔºü",
      errorProcessingSynced: "Â§ÑÁêÜÂêåÊ≠•Êï∞ÊçÆÊó∂Âá∫Èîô„ÄÇËØ∑ÈáçËØï„ÄÇ",
    },

    // Êó∂Èó¥Áõ∏ÂÖ≥
    time: {
      minutes: "ÂàÜÈíü",
      hours: "Â∞èÊó∂",
      seconds: "Áßí",
      overtime: "Ë∂ÖÊó∂",
    },
  },
};

// ÂΩìÂâçËØ≠Ë®ÄÁä∂ÊÄÅ
let currentLanguage = 'en';

// Ëé∑ÂèñÂΩìÂâçËØ≠Ë®Ä
export const getCurrentLanguage = () => currentLanguage;

// ËÆæÁΩÆËØ≠Ë®Ä
export const setLanguage = (lang) => {
  if (translations[lang]) {
    currentLanguage = lang;
    // ‰øùÂ≠òÂà∞ localStorage
    if (typeof window !== 'undefined') {
      localStorage.setItem('corgitodo-language', lang);
    }
    return true;
  }
  return false;
};

// ÂàùÂßãÂåñËØ≠Ë®ÄÔºà‰ªé localStorage ËØªÂèñÔºâ
export const initLanguage = () => {
  if (typeof window !== 'undefined') {
    const savedLang = localStorage.getItem('corgitodo-language');
    if (savedLang && translations[savedLang]) {
      currentLanguage = savedLang;
    } else {
      // Ê†πÊçÆÊµèËßàÂô®ËØ≠Ë®ÄËá™Âä®ÈÄâÊã©
      const browserLang = navigator.language.split('-')[0];
      if (translations[browserLang]) {
        currentLanguage = browserLang;
      }
    }
  }
  return currentLanguage;
};

// ÁøªËØëÂáΩÊï∞
export const t = (key, params = {}) => {
  const keys = key.split('.');
  let value = translations[currentLanguage];
  
  for (const k of keys) {
    if (value && typeof value === 'object') {
      value = value[k];
    } else {
      // Â¶ÇÊûúÊâæ‰∏çÂà∞ÁøªËØëÔºåÂõûÈÄÄÂà∞Ëã±Êñá
      value = translations.en;
      for (const k of keys) {
        if (value && typeof value === 'object') {
          value = value[k];
        } else {
          return key; // Â¶ÇÊûúËã±Êñá‰πüÊ≤°ÊúâÔºåËøîÂõûÈîÆÂêç
        }
      }
      break;
    }
  }
  
  if (typeof value === 'string') {
    // ÁÆÄÂçïÁöÑÂèÇÊï∞ÊõøÊç¢
    return value.replace(/\{(\w+)\}/g, (match, param) => {
      return params[param] || match;
    });
  }
  
  return key;
};

// Ëé∑ÂèñÊîØÊåÅÁöÑËØ≠Ë®ÄÂàóË°®
export const getSupportedLanguages = () => {
  return Object.keys(translations).map(lang => ({
    code: lang,
    name: lang === 'en' ? 'English' : '‰∏≠Êñá',
    nativeName: lang === 'en' ? 'English' : '‰∏≠Êñá'
  }));
};
